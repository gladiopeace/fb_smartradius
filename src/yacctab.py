
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASHabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_opt : empty\n| declaration_specifiersdesignation_opt : empty\n| designationexpression_opt : empty\n| expressionidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_listspecifier_qualifier_list_opt : empty\n| specifier_qualifier_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         function_definition : declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n         decl_body : declaration_specifiers init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers  : type_qualifier declaration_specifiers_opt\n         declaration_specifiers  : type_specifier declaration_specifiers_opt\n         declaration_specifiers  : storage_class_specifier declaration_specifiers_opt\n         declaration_specifiers  : function_specifier declaration_specifiers_opt\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier  : VOID\n                            | _BOOL\n                            | CHAR\n                            | SHORT\n                            | INT\n                            | LONG\n                            | FLOAT\n                            | DOUBLE\n                            | _COMPLEX\n                            | SIGNED\n                            | UNSIGNED\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator_list    : EQUALS initializer\n         init_declarator_list    : abstract_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         specifier_qualifier_list    : type_qualifier specifier_qualifier_list_opt\n         specifier_qualifier_list    : type_specifier specifier_qualifier_list_opt\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : specifier_qualifier_list abstract_declarator SEMI\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : direct_declarator\n         declarator  : pointer direct_declarator\n         declarator  : pointer TYPEID\n         direct_declarator   : ID\n         direct_declarator   : LPAREN declarator RPAREN\n         direct_declarator   : direct_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_declarator   : direct_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                | direct_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_declarator   : direct_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_declarator   : direct_declarator LPAREN parameter_type_list RPAREN\n                                | direct_declarator LPAREN identifier_list_opt RPAREN\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA identifier RPAREN\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'MINUSEQUAL':([93,96,97,101,103,104,106,107,108,111,114,116,118,119,120,121,123,127,175,176,177,179,183,197,222,223,225,262,279,303,304,305,309,310,313,387,389,393,395,428,429,437,],[-251,-259,-254,-243,-216,-252,186,-253,-240,-242,-241,-256,-228,-250,-249,-255,-257,-248,-218,-260,-217,-237,-236,-258,-220,-219,-214,-248,-262,-233,-232,-231,-235,-234,-244,-230,-229,-215,-221,-245,-238,-239,]),'TIMES':([0,1,3,4,5,6,7,9,11,12,13,14,15,16,17,18,19,21,22,24,25,26,27,28,29,30,31,32,33,35,37,38,40,41,42,43,45,48,49,50,51,52,53,54,57,63,65,66,67,68,69,70,71,78,79,81,82,83,85,87,89,90,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,123,125,126,127,128,130,131,134,137,144,147,148,149,153,154,156,159,160,161,174,175,176,177,179,180,181,183,185,186,187,188,189,190,191,192,193,194,195,196,197,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,229,230,231,237,239,248,249,253,254,255,261,262,263,264,266,267,269,272,273,275,276,277,278,279,281,288,290,291,293,298,300,303,304,305,309,310,313,314,315,316,319,320,321,322,323,324,325,326,327,328,330,331,332,333,334,335,336,337,346,349,353,357,358,359,360,361,362,364,365,367,368,369,370,371,372,376,382,385,387,388,389,392,393,394,395,396,398,400,402,405,406,408,409,411,421,422,423,424,425,427,428,429,430,432,433,434,435,437,439,441,442,443,444,446,447,448,],[1,-263,1,-33,-58,-36,-65,-57,-37,-64,1,-62,-34,-263,-71,-73,-63,-72,-74,-66,-35,-263,-61,-54,-69,-31,-59,-75,-55,-67,-178,-263,-263,1,-56,-68,-70,-76,-60,-28,-124,1,-27,94,130,1,-47,-32,-10,-51,-9,-53,1,-50,-86,-261,-85,-52,-263,-102,-101,-125,-251,-223,130,-259,-254,-222,-226,-195,-243,130,-216,-252,-214,-253,-240,-224,-227,-242,130,203,-241,130,-256,-228,-250,-249,-255,-257,130,-225,-248,227,-223,-263,130,1,1,1,-38,130,-263,-263,1,-28,-263,293,130,-218,-260,-217,-237,130,130,-236,-183,-187,-191,-190,-186,130,-188,-182,-181,-185,-184,-189,-258,1,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,-220,-219,130,-214,-223,130,130,-12,-11,-39,-44,-40,-41,130,130,-156,-248,-42,-45,-155,-43,130,-157,130,-23,-24,-83,-84,-262,-87,130,130,130,-223,-103,130,-233,-232,-231,-235,-234,-244,130,130,1,203,-196,203,203,203,203,203,203,-198,203,203,203,203,203,203,203,-197,203,-263,-139,-159,130,130,-172,-171,-175,130,130,-174,130,130,-158,-89,1,130,-88,-105,-104,-230,130,-229,-263,-215,130,-221,130,130,-11,130,-160,-170,-173,130,-162,130,-161,130,130,130,130,-245,-238,-263,-166,-163,-165,130,-239,130,130,-167,-164,130,-169,130,-168,]),'MINUSMINUS':([22,32,48,50,51,53,54,57,65,81,85,90,93,94,95,96,97,98,99,101,102,103,104,107,108,109,110,111,112,114,115,116,118,119,120,121,123,125,126,127,128,130,131,134,149,159,160,161,174,176,179,180,181,183,185,186,187,188,189,190,191,192,193,194,195,196,197,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,224,227,229,230,231,237,248,249,253,254,255,261,262,263,264,266,267,269,272,273,279,288,290,291,293,300,303,304,305,309,310,313,314,315,346,349,353,357,358,359,360,361,362,364,365,367,368,369,372,387,388,389,392,394,396,398,400,402,405,406,408,409,411,421,422,423,424,425,427,428,429,430,432,433,434,435,437,439,441,442,443,444,446,447,448,],[-74,-75,-76,-28,-124,-27,95,95,-47,-261,-263,-125,-251,-223,95,-259,-254,-222,-226,-243,95,179,-252,-253,-240,-224,-227,-242,95,-241,95,-256,-228,-250,-249,-255,-257,95,-225,-248,95,-223,-263,95,95,-28,-263,95,95,-260,-237,95,95,-236,-183,-187,-191,-190,-186,95,-188,-182,-181,-185,-184,-189,-258,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-223,95,95,-12,-11,-44,-40,-41,95,95,-156,-248,-42,-45,-155,-43,95,-157,95,-262,95,95,95,-223,95,-233,-232,-231,-235,-234,-244,95,95,-263,-139,-159,95,95,-172,-171,-175,95,95,-174,95,95,-158,95,-230,95,-229,-263,95,95,95,-11,95,-160,-170,-173,95,-162,95,-161,95,95,95,95,-245,-238,-263,-166,-163,-165,95,-239,95,95,-167,-164,95,-169,95,-168,]),'PLUSEQUAL':([93,96,97,101,103,104,106,107,108,111,114,116,118,119,120,121,123,127,175,176,177,179,183,197,222,223,225,262,279,303,304,305,309,310,313,387,389,393,395,428,429,437,],[-251,-259,-254,-243,-216,-252,189,-253,-240,-242,-241,-256,-228,-250,-249,-255,-257,-248,-218,-260,-217,-237,-236,-258,-220,-219,-214,-248,-262,-233,-232,-231,-235,-234,-244,-230,-229,-215,-221,-245,-238,-239,]),'AND':([22,32,48,50,51,53,54,57,65,81,85,90,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,123,125,126,127,128,130,131,134,149,159,160,161,174,175,176,177,179,180,181,183,185,186,187,188,189,190,191,192,193,194,195,196,197,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,229,230,231,237,248,249,253,254,255,261,262,263,264,266,267,269,272,273,279,288,290,291,293,300,303,304,305,309,310,313,314,315,319,320,321,322,323,324,325,326,327,328,330,331,332,333,334,335,336,337,346,349,353,357,358,359,360,361,362,364,365,367,368,369,372,387,388,389,392,393,394,395,396,398,400,402,405,406,408,409,411,421,422,423,424,425,427,428,429,430,432,433,434,435,437,439,441,442,443,444,446,447,448,],[-74,-75,-76,-28,-124,-27,98,98,-47,-261,-263,-125,-251,-223,98,-259,-254,-222,-226,-195,-243,98,-216,-252,-214,-253,-240,-224,-227,-242,98,202,-241,98,-256,-228,-250,-249,-255,-257,98,-225,-248,98,-223,-263,98,98,-28,-263,98,98,-218,-260,-217,-237,98,98,-236,-183,-187,-191,-190,-186,98,-188,-182,-181,-185,-184,-189,-258,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-220,-219,98,-214,-223,98,98,-12,-11,-44,-40,-41,98,98,-156,-248,-42,-45,-155,-43,98,-157,98,-262,98,98,98,-223,98,-233,-232,-231,-235,-234,-244,98,98,-209,-196,-208,-206,202,-201,202,-205,-198,-203,-199,202,-202,-204,-200,-207,-197,202,-263,-139,-159,98,98,-172,-171,-175,98,98,-174,98,98,-158,98,-230,98,-229,-263,-215,98,-221,98,98,-11,98,-160,-170,-173,98,-162,98,-161,98,98,98,98,-245,-238,-263,-166,-163,-165,98,-239,98,98,-167,-164,98,-169,98,-168,]),'TYPEDEF':([0,4,5,6,7,9,11,12,13,14,15,16,17,18,19,21,22,24,25,26,27,28,29,30,31,32,33,34,35,37,38,40,42,43,44,45,46,48,49,58,63,65,66,73,75,76,77,79,81,82,86,87,89,129,147,148,149,150,158,239,244,248,249,253,261,263,264,266,267,272,273,279,281,295,296,298,316,353,359,360,361,365,367,369,370,376,379,380,382,385,405,406,408,411,414,415,422,432,433,434,442,443,446,448,],[5,-33,-58,-36,-65,-57,-37,-64,5,-62,-34,5,-71,-73,-63,-72,-74,-66,-35,5,-61,-54,-69,-31,-59,-75,-55,5,-67,-178,5,5,-56,-68,-111,-70,-114,-76,-60,5,5,-47,-32,-48,5,-113,-112,-86,-261,-85,5,-102,-101,5,5,-38,5,-49,-115,-39,5,-44,-40,-41,-156,-42,-45,-155,-43,-157,5,-262,-87,-121,-120,-103,5,-159,-172,-171,-175,-174,5,-158,-89,-88,-116,-119,-105,-104,-160,-170,-173,-162,-118,-117,-161,-166,-163,-165,-167,-164,-169,-168,]),'XOREQUAL':([93,96,97,101,103,104,106,107,108,111,114,116,118,119,120,121,123,127,175,176,177,179,183,197,222,223,225,262,279,303,304,305,309,310,313,387,389,393,395,428,429,437,],[-251,-259,-254,-243,-216,-252,192,-253,-240,-242,-241,-256,-228,-250,-249,-255,-257,-248,-218,-260,-217,-237,-236,-258,-220,-219,-214,-248,-262,-233,-232,-231,-235,-234,-244,-230,-229,-215,-221,-245,-238,-239,]),'NOT':([22,32,48,50,51,53,54,57,65,81,85,90,94,95,98,99,102,109,110,112,115,125,126,128,130,131,134,149,159,160,161,174,180,181,185,186,187,188,189,190,191,192,193,194,195,196,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,224,227,229,230,231,237,248,249,253,254,255,261,263,264,266,267,269,272,273,279,288,290,291,293,300,314,315,346,349,353,357,358,359,360,361,362,364,365,367,368,369,372,388,392,394,396,398,400,402,405,406,408,409,411,421,422,423,424,425,427,430,432,433,434,435,439,441,442,443,444,446,447,448,],[-74,-75,-76,-28,-124,-27,99,99,-47,-261,-263,-125,-223,99,-222,-226,99,-224,-227,99,99,99,-225,99,-223,-263,99,99,-28,-263,99,99,99,99,-183,-187,-191,-190,-186,99,-188,-182,-181,-185,-184,-189,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-223,99,99,-12,-11,-44,-40,-41,99,99,-156,-42,-45,-155,-43,99,-157,99,-262,99,99,99,-223,99,99,99,-263,-139,-159,99,99,-172,-171,-175,99,99,-174,99,99,-158,99,99,-263,99,99,99,-11,99,-160,-170,-173,99,-162,99,-161,99,99,99,99,-263,-166,-163,-165,99,99,99,-167,-164,99,-169,99,-168,]),'LONG':([0,4,5,6,7,9,11,12,13,14,15,16,17,18,19,21,22,24,25,26,27,28,29,30,31,32,33,34,35,37,38,40,42,43,44,45,46,48,49,58,63,65,66,73,75,76,77,79,80,81,82,86,87,89,112,129,147,148,149,150,151,152,153,154,155,157,158,174,184,221,224,239,244,248,249,253,261,263,264,266,267,272,273,274,279,280,281,289,295,296,298,316,353,359,360,361,365,367,369,370,373,374,376,379,380,382,385,405,406,408,411,414,415,422,432,433,434,442,443,446,448,],[7,-33,-58,-36,-65,-57,-37,-64,7,-62,-34,7,-71,-73,-63,-72,-74,-66,-35,7,-61,-54,-69,-31,-59,-75,-55,7,-67,-178,7,7,-56,-68,-111,-70,-114,-76,-60,7,7,-47,-32,-48,7,-113,-112,-86,7,-261,-85,7,-102,-101,7,7,7,-38,7,-49,7,-92,7,7,7,7,-115,7,7,7,7,-39,7,-44,-40,-41,-156,-42,-45,-155,-43,-157,7,7,-262,-93,-87,7,-121,-120,-103,7,-159,-172,-171,-175,-174,7,-158,-89,-95,-94,-88,-116,-119,-105,-104,-160,-170,-173,-162,-118,-117,-161,-166,-163,-165,-167,-164,-169,-168,]),'LAND':([93,96,97,100,101,103,104,106,107,108,111,113,114,116,118,119,120,121,123,127,175,176,177,179,183,197,222,223,225,262,279,303,304,305,309,310,313,319,320,321,322,323,324,325,326,327,328,330,331,332,333,334,335,336,337,387,389,393,395,428,429,437,],[-251,-259,-254,-195,-243,-216,-252,-214,-253,-240,-242,208,-241,-256,-228,-250,-249,-255,-257,-248,-218,-260,-217,-237,-236,-258,-220,-219,-214,-248,-262,-233,-232,-231,-235,-234,-244,-209,-196,-208,-206,208,-201,-212,-205,-198,-203,-199,-211,-202,-204,-200,-207,-197,-210,-230,-229,-215,-221,-245,-238,-239,]),'RSHIFTEQUAL':([93,96,97,101,103,104,106,107,108,111,114,116,118,119,120,121,123,127,175,176,177,179,183,197,222,223,225,262,279,303,304,305,309,310,313,387,389,393,395,428,429,437,],[-251,-259,-254,-243,-216,-252,196,-253,-240,-242,-241,-256,-228,-250,-249,-255,-257,-248,-218,-260,-217,-237,-236,-258,-220,-219,-214,-248,-262,-233,-232,-231,-235,-234,-244,-230,-229,-215,-221,-245,-238,-239,]),'EXTERN':([0,4,5,6,7,9,11,12,13,14,15,16,17,18,19,21,22,24,25,26,27,28,29,30,31,32,33,34,35,37,38,40,42,43,44,45,46,48,49,58,63,65,66,73,75,76,77,79,81,82,86,87,89,129,147,148,149,150,158,239,244,248,249,253,261,263,264,266,267,272,273,279,281,295,296,298,316,353,359,360,361,365,367,369,370,376,379,380,382,385,405,406,408,411,414,415,422,432,433,434,442,443,446,448,],[9,-33,-58,-36,-65,-57,-37,-64,9,-62,-34,9,-71,-73,-63,-72,-74,-66,-35,9,-61,-54,-69,-31,-59,-75,-55,9,-67,-178,9,9,-56,-68,-111,-70,-114,-76,-60,9,9,-47,-32,-48,9,-113,-112,-86,-261,-85,9,-102,-101,9,9,-38,9,-49,-115,-39,9,-44,-40,-41,-156,-42,-45,-155,-43,-157,9,-262,-87,-121,-120,-103,9,-159,-172,-171,-175,-174,9,-158,-89,-88,-116,-119,-105,-104,-160,-170,-173,-162,-118,-117,-161,-166,-163,-165,-167,-164,-169,-168,]),'GE':([93,96,97,100,101,103,104,106,107,108,111,113,114,116,118,119,120,121,123,127,175,176,177,179,183,197,222,223,225,262,279,303,304,305,309,310,313,319,320,321,322,323,324,325,326,327,328,330,331,332,333,334,335,336,337,387,389,393,395,428,429,437,],[-251,-259,-254,-195,-243,-216,-252,-214,-253,-240,-242,209,-241,-256,-228,-250,-249,-255,-257,-248,-218,-260,-217,-237,-236,-258,-220,-219,-214,-248,-262,-233,-232,-231,-235,-234,-244,209,-196,209,-206,209,-201,209,-205,-198,-203,-199,209,-202,-204,-200,209,-197,209,-230,-229,-215,-221,-245,-238,-239,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'assignment_expression_opt':([54,128,161,],[92,226,292,]),'iteration_statement':([149,254,273,362,368,402,423,424,425,439,444,447,],[248,248,248,248,248,248,248,248,248,248,248,248,]),'expression':([112,149,174,181,212,221,224,254,269,273,357,358,362,364,367,368,402,409,421,423,424,425,427,435,439,441,444,447,],[198,251,198,308,329,198,198,251,366,251,403,404,251,407,251,251,251,251,431,251,251,251,251,251,251,251,251,251,]),'translation_unit_or_empty':([0,],[2,]),'brace_open':([39,47,57,74,79,82,87,89,134,135,149,230,254,273,315,362,368,386,395,396,398,402,423,424,425,439,444,447,],[80,88,131,149,151,157,167,171,131,149,149,131,149,149,392,149,149,392,392,392,131,149,149,149,149,149,149,149,]),'struct_declaration':([80,151,155,157,274,289,],[152,152,280,152,280,280,]),'declaration_specifiers':([0,13,16,26,34,38,40,58,63,75,86,129,147,149,244,273,316,367,],[3,3,67,67,71,67,67,71,137,71,137,137,137,71,137,71,137,71,]),'function_definition':([0,13,],[4,4,]),'parameter_list':([63,86,129,147,316,],[138,138,138,138,138,]),'identifier_list':([86,],[163,]),'decl_body':([0,13,34,58,75,149,273,367,],[8,8,8,8,8,8,8,8,]),'cast_expression':([54,57,112,125,128,134,149,161,174,180,181,190,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,224,229,230,254,255,269,273,288,290,291,300,314,315,357,358,362,364,367,368,372,388,394,396,398,402,409,421,423,424,425,427,435,439,441,444,447,],[100,100,100,223,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,393,100,100,100,100,100,100,100,100,100,393,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'designator':([131,235,346,392,430,],[234,348,234,234,234,]),'initializer_list':([131,392,],[232,418,]),'expression_statement':([149,254,273,362,368,402,423,424,425,439,444,447,],[253,253,253,253,253,253,253,253,253,253,253,253,]),'init_declarator':([3,71,144,],[55,55,247,]),'enumerator_list':([88,167,171,],[169,297,301,]),'compound_statement':([74,135,149,254,273,362,368,402,423,424,425,439,444,447,],[148,239,263,263,263,263,263,263,263,263,263,263,263,263,]),'empty':([0,1,3,16,26,34,38,40,54,58,63,71,85,86,128,129,131,137,147,149,153,154,156,160,161,201,254,273,316,346,362,367,368,392,402,409,423,424,425,427,430,435,439,441,444,447,],[10,53,59,69,69,72,69,69,117,72,139,59,53,162,117,139,237,241,139,252,275,275,285,53,117,241,354,354,139,400,354,354,354,400,354,354,354,354,354,354,400,354,354,354,354,354,]),'jump_statement':([149,254,273,362,368,402,423,424,425,439,444,447,],[264,264,264,264,264,264,264,264,264,264,264,264,]),'unified_wstring_literal':([54,57,95,102,112,115,125,128,134,149,161,174,180,181,190,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,224,229,230,254,255,269,273,288,290,291,300,314,315,357,358,362,364,367,368,372,388,394,396,398,402,409,421,423,424,425,427,435,439,441,444,447,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'translation_unit':([0,],[13,]),'postfix_expression':([54,57,95,102,112,115,125,128,134,149,161,174,180,181,190,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,224,229,230,254,255,269,273,288,290,291,300,314,315,357,358,362,364,367,368,372,388,394,396,398,402,409,421,423,424,425,427,435,439,441,444,447,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'pointer':([0,3,13,41,52,63,71,137,144,147,156,201,316,371,],[36,60,36,36,91,60,146,60,36,146,146,318,318,36,]),'parameter_type_list_opt':([63,129,147,316,],[140,228,140,140,]),'declaration':([0,13,34,58,75,149,273,367,],[15,15,73,73,150,266,266,409,]),'labeled_statement':([149,254,273,362,368,402,423,424,425,439,444,447,],[249,249,249,249,249,249,249,249,249,249,249,249,]),'declaration_list_opt':([34,58,],[74,135,]),'type_specifier':([0,13,16,26,34,38,40,58,63,75,80,86,112,129,147,149,151,153,154,155,157,174,184,221,224,244,273,274,289,316,367,],[16,16,16,16,16,16,16,16,16,16,154,16,154,16,16,16,154,154,154,154,154,154,154,154,154,16,16,154,154,16,16,]),'typedef_name':([0,13,16,26,34,38,40,58,63,75,80,86,112,129,147,149,151,153,154,155,157,174,184,221,224,244,273,274,289,316,367,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'assignment_operator':([106,],[190,]),'declaration_list':([34,58,],[75,75,]),'struct_declarator_list_opt':([156,],[287,]),'argument_expression_list':([180,],[306,]),'identifier':([54,57,86,95,102,112,115,125,128,134,149,161,174,180,181,190,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,224,229,230,233,254,255,269,273,288,290,291,294,300,314,315,357,358,362,364,367,368,372,388,390,394,396,398,402,409,421,423,424,425,427,435,439,441,444,447,],[108,108,164,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,347,108,108,108,108,108,108,108,381,108,108,108,108,108,108,108,108,108,108,108,417,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'unified_string_literal':([54,57,95,102,112,115,125,128,134,149,161,174,180,181,190,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,224,229,230,254,255,269,273,288,290,291,300,314,315,357,358,362,364,367,368,372,388,394,396,398,402,409,421,423,424,425,427,435,439,441,444,447,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'binary_expression':([54,57,112,128,134,149,161,174,180,181,190,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,224,229,230,254,255,269,273,288,290,291,300,314,357,358,362,364,367,368,372,388,394,398,402,409,421,423,424,425,427,435,439,441,444,447,],[113,113,113,113,113,113,113,113,113,113,113,319,320,321,322,323,324,325,326,327,328,113,330,331,332,333,334,335,336,337,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'pp_directive':([0,13,],[25,25,]),'constant':([54,57,95,102,112,115,125,128,134,149,161,174,180,181,190,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,224,229,230,254,255,269,273,288,290,291,300,314,315,357,358,362,364,367,368,372,388,394,396,398,402,409,421,423,424,425,427,435,439,441,444,447,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'declaration_specifiers_opt':([16,26,38,40,],[68,70,78,83,]),'specifier_qualifier_list_opt':([153,154,],[277,278,]),'type_name':([112,174,184,221,224,],[199,302,311,338,339,]),'designation_opt':([131,346,392,430,],[230,398,230,398,]),'block_item':([149,273,],[272,369,]),'identifier_list_opt':([86,],[165,]),'constant_expression':([229,255,288,300,372,],[343,356,375,384,413,]),'direct_abstract_declarator':([3,60,63,71,137,146,147,156,201,316,318,],[56,136,56,56,56,136,56,56,56,56,136,]),'external_declaration':([0,13,],[30,66,]),'initializer':([57,134,230,398,],[132,238,345,420,]),'block_item_list':([149,],[273,]),'primary_expression':([54,57,95,102,112,115,125,128,134,149,161,174,180,181,190,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,224,229,230,254,255,269,273,288,290,291,300,314,315,357,358,362,364,367,368,372,388,394,396,398,402,409,421,423,424,425,427,435,439,441,444,447,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'enum_specifier':([0,13,16,26,34,38,40,58,63,75,80,86,112,129,147,149,151,153,154,155,157,174,184,221,224,244,273,274,289,316,367,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'specifier_qualifier_list':([80,112,151,153,154,155,157,174,184,221,224,274,289,],[156,201,156,276,276,156,156,201,201,201,201,156,156,]),'struct_declarator':([156,371,],[282,412,]),'struct_declarator_list':([156,],[283,]),'type_qualifier_list_opt':([1,85,160,],[52,161,291,]),'declarator':([0,3,13,41,63,71,137,144,147,156,371,],[34,58,34,84,84,145,240,145,84,284,284,]),'designation':([131,346,392,430,],[231,231,231,231,]),'struct_or_union_specifier':([0,13,16,26,34,38,40,58,63,75,80,86,112,129,147,149,151,153,154,155,157,174,184,221,224,244,273,274,289,316,367,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'abstract_declarator':([3,63,71,137,147,156,201,316,],[61,141,61,242,141,286,242,141,]),'parameter_declaration':([63,86,129,147,244,316,],[142,142,142,142,352,142,]),'type_qualifier_list':([1,85,160,],[50,159,50,]),'type_qualifier':([0,1,13,16,26,34,38,40,50,58,63,75,80,85,86,112,129,147,149,151,153,154,155,157,159,160,174,184,221,224,244,273,274,289,316,367,],[38,51,38,38,38,38,38,38,90,38,38,38,153,51,38,153,38,38,38,153,153,153,153,153,90,51,153,153,153,153,38,38,153,153,38,38,]),'struct_or_union':([0,13,16,26,34,38,40,58,63,75,80,86,112,129,147,149,151,153,154,155,157,174,184,221,224,244,273,274,289,316,367,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'parameter_type_list':([63,86,129,147,316,],[143,166,143,143,143,]),'block_item_list_opt':([149,],[250,]),'conditional_expression':([54,57,112,128,134,149,161,174,180,181,190,212,221,224,229,230,254,255,269,273,288,290,291,300,314,357,358,362,364,367,368,372,388,394,398,402,409,421,423,424,425,427,435,439,441,444,447,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,344,122,122,344,122,122,344,122,122,344,122,122,122,122,122,122,122,344,122,419,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'enumerator':([88,167,171,299,],[168,168,168,383,]),'assignment_expression':([54,57,112,128,134,149,161,174,180,181,190,212,221,224,230,254,269,273,290,291,314,357,358,362,364,367,368,388,398,402,409,421,423,424,425,427,435,439,441,444,447,],[124,133,200,124,133,200,124,200,307,200,312,200,200,200,133,200,200,200,377,378,391,200,200,200,200,200,200,416,133,200,200,200,200,200,200,200,200,200,200,200,200,]),'storage_class_specifier':([0,13,16,26,34,38,40,58,63,75,86,129,147,149,244,273,316,367,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'brace_close':([155,169,236,250,274,289,297,301,346,418,430,],[281,298,350,353,370,376,382,385,399,429,437,]),'abstract_declarator_opt':([137,201,],[243,317,]),'function_specifier':([0,13,16,26,34,38,40,58,63,75,86,129,147,149,244,273,316,367,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'selection_statement':([149,254,273,362,368,402,423,424,425,439,444,447,],[267,267,267,267,267,267,267,267,267,267,267,267,]),'unary_expression':([54,57,95,102,112,115,125,128,134,149,161,174,180,181,190,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,224,229,230,254,255,269,273,288,290,291,300,314,315,357,358,362,364,367,368,372,388,394,396,398,402,409,421,423,424,425,427,435,439,441,444,447,],[106,106,175,177,106,222,225,106,106,106,106,106,106,106,106,225,225,225,225,225,225,225,225,225,225,106,225,225,225,225,225,225,225,225,106,106,225,106,106,225,106,106,225,106,106,225,106,225,106,106,106,106,106,106,225,106,225,225,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'init_declarator_list':([3,71,],[64,64,]),'unary_operator':([54,57,95,102,112,115,125,128,134,149,161,174,180,181,190,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,224,229,230,254,255,269,273,288,290,291,300,314,315,357,358,362,364,367,368,372,388,394,396,398,402,409,421,423,424,425,427,435,439,441,444,447,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'designator_list':([131,346,392,430,],[235,235,235,235,]),'expression_opt':([149,254,273,362,367,368,402,409,423,424,425,427,435,439,441,444,447,],[260,260,260,260,410,260,260,426,260,260,260,436,440,260,445,260,260,]),'struct_declaration_list':([80,151,157,],[155,274,289,]),'direct_declarator':([0,3,13,36,41,60,63,71,137,144,146,147,156,371,],[44,44,44,77,44,77,44,44,44,44,77,44,44,44,]),'statement':([149,254,273,362,368,402,423,424,425,439,444,447,],[261,355,261,405,411,422,432,433,434,443,446,448,]),'initializer_list_opt':([131,],[236,]),'init_declarator_list_opt':([3,71,],[62,62,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',42),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',42),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',42),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',42),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_specifiers_opt -> empty','declaration_specifiers_opt',1,'p_declaration_specifiers_opt','plyparser.py',42),
  ('declaration_specifiers_opt -> declaration_specifiers','declaration_specifiers_opt',1,'p_declaration_specifiers_opt','plyparser.py',43),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',42),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',42),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',42),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',42),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',42),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',42),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('specifier_qualifier_list_opt -> empty','specifier_qualifier_list_opt',1,'p_specifier_qualifier_list_opt','plyparser.py',42),
  ('specifier_qualifier_list_opt -> specifier_qualifier_list','specifier_qualifier_list_opt',1,'p_specifier_qualifier_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',42),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',42),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',501),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',502),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',510),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',517),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',529),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',534),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',539),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',544),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',549),
  ('function_definition -> declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',558),
  ('function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',575),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',586),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',587),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',588),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',589),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',590),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',591),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',605),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',664),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',673),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',674),
  ('declaration_specifiers -> type_qualifier declaration_specifiers_opt','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',679),
  ('declaration_specifiers -> type_specifier declaration_specifiers_opt','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',684),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers_opt','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',689),
  ('declaration_specifiers -> function_specifier declaration_specifiers_opt','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',694),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',699),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',700),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',701),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',702),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',703),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',708),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier_1','c_parser.py',713),
  ('type_specifier -> _BOOL','type_specifier',1,'p_type_specifier_1','c_parser.py',714),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier_1','c_parser.py',715),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier_1','c_parser.py',716),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier_1','c_parser.py',717),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier_1','c_parser.py',718),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier_1','c_parser.py',719),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier_1','c_parser.py',720),
  ('type_specifier -> _COMPLEX','type_specifier',1,'p_type_specifier_1','c_parser.py',721),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier_1','c_parser.py',722),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier_1','c_parser.py',723),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier_2','c_parser.py',728),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier_2','c_parser.py',729),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier_2','c_parser.py',730),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',735),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',736),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',737),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list_1','c_parser.py',742),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list_1','c_parser.py',743),
  ('init_declarator_list -> EQUALS initializer','init_declarator_list',2,'p_init_declarator_list_2','c_parser.py',753),
  ('init_declarator_list -> abstract_declarator','init_declarator_list',1,'p_init_declarator_list_3','c_parser.py',761),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',769),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',770),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list_opt','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',775),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list_opt','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',780),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',788),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',789),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',798),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',807),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',808),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',817),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',818),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',825),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',826),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',831),
  ('struct_declaration -> specifier_qualifier_list abstract_declarator SEMI','struct_declaration',3,'p_struct_declaration_2','c_parser.py',869),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',883),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',884),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',892),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',897),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',898),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',906),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',907),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',912),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',917),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',918),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',923),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',924),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',925),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',936),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',937),
  ('declarator -> direct_declarator','declarator',1,'p_declarator_1','c_parser.py',952),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator_2','c_parser.py',957),
  ('declarator -> pointer TYPEID','declarator',2,'p_declarator_3','c_parser.py',966),
  ('direct_declarator -> ID','direct_declarator',1,'p_direct_declarator_1','c_parser.py',977),
  ('direct_declarator -> LPAREN declarator RPAREN','direct_declarator',3,'p_direct_declarator_2','c_parser.py',986),
  ('direct_declarator -> direct_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_declarator',5,'p_direct_declarator_3','c_parser.py',991),
  ('direct_declarator -> direct_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_declarator',6,'p_direct_declarator_4','c_parser.py',1005),
  ('direct_declarator -> direct_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_declarator',6,'p_direct_declarator_4','c_parser.py',1006),
  ('direct_declarator -> direct_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_declarator',5,'p_direct_declarator_5','c_parser.py',1026),
  ('direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN','direct_declarator',4,'p_direct_declarator_6','c_parser.py',1037),
  ('direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN','direct_declarator',4,'p_direct_declarator_6','c_parser.py',1038),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1065),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1066),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1095),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1096),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1101),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1102),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1110),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1111),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1120),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1131),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1162),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1163),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1172),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1177),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1178),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1186),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1187),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1198),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1206),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1207),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1212),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1213),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1218),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1235),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1243),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1248),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1258),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1262),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1273),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1282),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1293),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1302),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1312),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1323),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1324),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1331),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1332),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1338),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1344),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1348),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1352),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1356),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1360),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1364),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1369),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1373),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1377),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1381),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1386),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1390),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1394),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1398),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1399),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1404),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1411),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1412),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1424),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1428),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1429),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1442),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1443),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1444),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1445),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1446),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1447),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1448),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1449),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1450),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1451),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1452),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1457),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1461),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1462),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1470),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1471),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1472),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1473),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1474),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1475),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1476),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1477),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1478),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1479),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1480),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1481),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1482),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1483),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1484),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1485),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1486),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1487),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1488),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1496),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1500),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1504),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1508),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1509),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1510),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1515),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1516),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1524),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1525),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1526),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1527),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1528),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1529),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1534),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1538),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1542),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1543),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1548),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1549),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1550),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1551),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1557),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1558),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1563),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1564),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1569),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1573),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1577),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1578),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1583),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA identifier RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1587),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1595),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1596),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1605),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1609),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1610),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1611),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1612),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1618),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1619),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1625),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1626),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1637),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1638),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1648),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1649),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1659),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1664),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1669),
]
